/******* ANIMATION INTRO *******/
.outer{
  background-color: blue;
  width: 500px;
  height: 500px;
  margin: 0 auto;
}
.inner{
  background-color: yellow;
  width: 50%;
  height: 50%;
  transition: transform 1s ease-in-out, background-color 1s;
  /* yavaş başla , hızlan, tekrar yavaş bitir. ease-in-out; */
  /* transition: transform 1s cubic-bezier(0.42, 0, 0.42, 1.63); */
  /* cubic-bezier(0.42, 0, 0.42, 1.63); incele yapıp ayarlanıp, oradan kopyalanabiliyor.*/
}




.outer:hover .inner{
  transform: translate(100%);
  background-color: green;

  /* animation: name duration timing-function delay iteration-count direction fill-mode;
  hepsi buradan tek elden yapılabilir.
*/

} 

/*! animation ile yapılması */

.outer1{
  background-color: green;
  width: 500px;
  height: 500px;
  margin: 0 auto;
}
.inner1{
  background-color: yellow;
  width: 50%;
  height: 50%;

}

.outer1:hover .inner1{
  /* animation: name duration timing-function delay iteration-count direction fill-mode;
  hepsi buradan tek elden yapılabilir.
*/
animation-name: travel;
animation-duration: 2s; /* bütün animasyon toplam süresi*/
animation-timing-function: ease-in-out;

/* animation-iteration-count: infinite; */
/* hover olduğu süreceanimasyon devam eder. infinite; */

/*! animasyon tekrar adedi */
  /*! **********************************/
  /* ? calc() metodu ile degiskenlere gore matematiksel olarak hesaplanabilir */
  /*? inifinite yapilirsa surekli calisir. Bu sebeple sonsuz
  /*? olan bir animasyonu hover'a  vermek yerine dogrdudan elemena vermek
  /*? ve hover'ında  ise animation-play-state: paused ile durdurmak mantikli olabilir.; */

animation-iteration-count: 3;  /*sayı kere yapar animasyonu*/

/*! animasyon yonu */
  /*! **********************************/
  /*? animsyonun baslangic yonu */
  /*? normal,  reverse, alternate, alternate-reverse */
animation-direction: alternate;

/*! animasyon doldurma modu */
  /*! ***********************************/
  /*? animasyonun, animasyon yonune de bagli olarak hangi keyframe de bitecegini gosterir. */
  /*?  none, forwards, backwards, both */
animation-fill-mode: forwards; /* en son konumda kalır */

  /*! animasyon gecikmesi */
  /*! ***********************************/
  /*? animasyon icin baslamasi gecikmesini belirler */
  /*? Negatif gecikme baslama gecikmesi olarak degil
  /*? ilgili suredeki keyframe'lerin atlanilmasini saglar */
animation-delay: 1s; /* pozitif değer başlangıcı geciktirir, negatif verilirse okadar saniye sonraki bulunacağı konumdan başlar */
/* animation-delay: -2s; */


  /*! Kisa yol tanimlamasi
  /*! ***********************************/
  animation: travel 2s ease-in-out 0.5s 2 alternate forwards;

} 

/* animasyon adı ile aynı olması lazım */
/*?  Keyframe: animasyon noktalarinin ve zamanlarinin tanimlanmasini saglar
/*?  % olarak ve from - to seklinde kullanilabilir.*/
@keyframes travel {

  0%{
    /*! başlangıca konumu*/
    transform: translateX(0);

  }
  /*! başlangıca göre 100brim aşağısı*/
  33%{
transform: translateY(100%);
  }
  66%{
transform: translate(100%, 100%);
  }
  100%{
transform: translate(100%, 0);
  }
  
}
